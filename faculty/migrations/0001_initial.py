# Generated by Django 3.0.1 on 2019-12-30 05:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cohort', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('netid', models.CharField(blank=True, help_text='The Georgetown NetID of the faculty member', max_length=24, null=True)),
                ('prefix', models.CharField(blank=True, choices=[('Dr.', 'Dr.'), ('Mr.', 'Mr.'), ('Ms.', 'Ms.'), ('Mrs.', 'Mrs.'), ('Dean', 'Dean'), ('Hon.', 'Hon.'), ('Rev.', 'Rev.')], default=None, help_text="Title or prefix for the faculty member's display name", max_length=4, null=True)),
                ('first_name', models.CharField(blank=True, help_text='The first name of the faculty, if not set the user is used', max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, help_text='The last name of the faculty, if not set the user is used', max_length=255, null=True)),
                ('suffix', models.CharField(blank=True, choices=[('PhD', 'PhD'), ('Esq', 'Esq'), ('MD', 'MD'), ('LLD', 'LLD'), ('JD', 'JD'), ('RN', 'RN'), ('DO', 'DO'), ('DDS', 'DDS'), ('CPA', 'CPA'), ('Jr.', 'Jr.'), ('Sr.', 'Sr.'), ('II', 'II'), ('III', 'III'), ('IV', 'IV')], default=None, help_text="Suffix for the faculty member's display name", max_length=4, null=True)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Expected hourly rate of faculty, used for contract validation', max_digits=10, null=True)),
                ('user', models.OneToOneField(blank=True, help_text='The user associated with the faculty member (optional)', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'faculty',
                'verbose_name_plural': 'faculty members',
                'db_table': 'faculty',
                'ordering': ('last_name', 'first_name'),
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('effort', models.PositiveSmallIntegerField(blank=True, default=100, help_text='Percent of effort/responsibility the instructor is assigned', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('primary', models.BooleanField(default=True, help_text='If this instructor has primary responsibility for the course')),
                ('role', models.CharField(blank=True, choices=[('IN', 'Instructor'), ('TA', 'Teaching Assistant'), ('CA', 'Capstone Advisor'), ('FD', 'Faculty Director'), ('SE', 'Subject Matter Expert')], default='IN', help_text='The role of the faculty member in the cohort', max_length=2)),
                ('course', models.ForeignKey(help_text='The course the faculty is being assigned to', on_delete=django.db.models.deletion.CASCADE, related_name='instructional_assignments', to='cohort.Course')),
                ('faculty', models.ForeignKey(help_text='The faculty member that is instructing the course', on_delete=django.db.models.deletion.CASCADE, related_name='instructional_assignments', to='faculty.Faculty')),
            ],
            options={
                'verbose_name': 'Instructional assignment',
                'db_table': 'instructors',
                'ordering': ('-course__start',),
                'unique_together': {('course', 'faculty')},
            },
        ),
        migrations.CreateModel(
            name='Advisor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('role', models.CharField(blank=True, choices=[('IN', 'Instructor'), ('TA', 'Teaching Assistant'), ('CA', 'Capstone Advisor'), ('FD', 'Faculty Director'), ('SE', 'Subject Matter Expert')], help_text='The role of the faculty member in the cohort', max_length=2)),
                ('hours', models.PositiveSmallIntegerField(blank=True, help_text='The number of instructional hours assigned to the advisor', null=True)),
                ('effort', models.PositiveSmallIntegerField(blank=True, default=100, help_text='Percent of effort/responsibility the advisor is assigned', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('primary', models.BooleanField(default=True, help_text='If this advisor has primary responsibility for the cohort')),
                ('cohort', models.ForeignKey(help_text='The cohort the faculty is being assigned to', on_delete=django.db.models.deletion.CASCADE, related_name='advisors', to='cohort.Cohort')),
                ('faculty', models.ForeignKey(help_text='The faculty member that is advising the cohort', on_delete=django.db.models.deletion.CASCADE, to='faculty.Faculty')),
            ],
            options={
                'verbose_name': 'Advising assignment',
                'db_table': 'advisors',
                'ordering': ('-cohort__start',),
                'unique_together': {('cohort', 'faculty', 'role')},
            },
        ),
    ]
